TODO:
5. see how to dump prometheus data to csv
7. fix mqtt session or connection failure
8. enhance sub.py, instead of using os cmd, use https://github.com/prometheus/client_python, prom_client.py
9. containerize pub and sub 

DONE: 
1. fix arduino publisher to use mqtt and json (done)
2. fix sub to write to exporter/sensor.prom (done)
3. check if prom picks up the metrics (done)
4. bring up grafana and query prometheus, build a simple visualization (done)
6. use docker compose to start all containers (done)
10. externalize ip:192.168.1.156, wifi info etc (done)

Folders
1. arduino: code, config for sensor controller using mqtt & json
2. exporter: node exporter text collector, *.prom (touching or creating new will cause metrics to be sourced by prometheus)
3. grafana: data folder
4. prometheus: prometheus data folder

How to run
1. git clone the project
2. ./prep.sh (and answer questions to get some values replaced properly)
3. docker-compose up (this will also build a docker image 'mqttsubscriber')
4. start your arduino controller to send sensor metrics to mqtt broker, if not, run 'docker run -d mqttsubscriber 

Components
1. hivemq: (broker/server)
        access: http://<ip address>:8080
        credential: admin/hivemq

2. publisher (faking arduino), https://www.emqx.com/en/blog/comparision-of-python-mqtt-client (paho-mqtt)
        run: 
            1. docker run -d mqttsubscriber python -m pub 
            or 
            2. create python env with package in docker file locally and run 'python -m pub'

3. subscriber (sub to sensor/json, writes to exporter text collector), https://www.emqx.com/en/blog/comparision-of-python-mqtt-client (paho-mqtt)
        run: 
            1. part of the docker-compose
            additionally 
            2. create python env with package in docker file locally and run 'python -m sub'

4. prometheus, used to store metrics

5. prometheus exporter text collector
    ** text format, https://prometheus.io/docs/instrumenting/exposition_formats/ 
    HOW to: 
        echo my_batch_job_completion_time $(date +%s) > /path/to/directory/my_batch_job.prom.$$
        mv /path/to/directory/my_batch_job.prom.$$ /path/to/directory/my_batch_job.prom

6. grafana
    ** TODO: see how to avoid manually config data source and dashboard, https://grafana.com/docs/grafana/latest/administration/configure-docker/

7. arduino the publisher, upload to mkr 1010, 
    topic: 'sensor/json'

Reference: 
1. https://github.com/stefanprodan/dockprom/blob/master/docker-compose.yml